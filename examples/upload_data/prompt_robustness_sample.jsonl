{"id": "math_001", "task_type": "long_multiplication", "input": {"a": 7654321, "b": 9876543}, "gold": 75596007419503}
{"id": "math_002", "task_type": "long_multiplication", "input": {"a": 5432109, "b": 8765432}, "gold": 47622844798588}
{"id": "math_003", "task_type": "long_multiplication", "input": {"a": 3456789, "b": 6543210}, "gold": 22619537777890}
{"id": "extract_001", "task_type": "extraction", "input": {"text": "AMAZON.COM\nOrder #123-4567890-1234567\n\nSubtotal: $89.99\nTax: $7.20\nTotal: $97.19\n\nDelivery Date: March 15, 2024"}, "gold": {"merchant": "AMAZON.COM", "total": 97.19, "date": "March 15, 2024"}}
{"id": "extract_002", "task_type": "extraction", "input": {"text": "STARBUCKS STORE #1234\n123 Main Street\n\nVenti Latte: $5.45\nTax: $0.44\nTotal: $5.89\n\nDate: 2024-03-20 14:30"}, "gold": {"merchant": "STARBUCKS", "total": 5.89, "date": "2024-03-20"}}
{"id": "sql_001", "task_type": "json_to_sql", "input": {"schema": "users(id, name, email, created_at)", "request": "Find all users created in the last 30 days"}, "gold": "SELECT * FROM users WHERE created_at >= DATE_SUB(NOW(), INTERVAL 30 DAY)"}
{"id": "sql_002", "task_type": "json_to_sql", "input": {"schema": "orders(id, user_id, amount, status, created_at), users(id, name, email)", "request": "Get total sales by user for completed orders"}, "gold": "SELECT u.name, SUM(o.amount) as total_sales FROM orders o JOIN users u ON o.user_id = u.id WHERE o.status = 'completed' GROUP BY u.id, u.name"}
{"id": "rag_001", "task_type": "rag_qa", "input": {"context": "Our company offers three pricing tiers: Basic ($10/month), Professional ($25/month), and Enterprise ($100/month). Basic includes 1,000 API calls, Professional includes 10,000 calls, and Enterprise includes unlimited calls.", "question": "What are the pricing options and their limits?"}, "gold": "We offer three pricing tiers: Basic at $10/month with 1,000 API calls, Professional at $25/month with 10,000 calls, and Enterprise at $100/month with unlimited calls."}
{"id": "rag_002", "task_type": "rag_qa", "input": {"context": "To deploy your application, first build the Docker image using 'docker build -t myapp .', then push to our registry with 'docker push registry.company.com/myapp', and finally deploy using 'kubectl apply -f deployment.yaml'.", "question": "How do I deploy my application?"}, "gold": "To deploy: 1) Build Docker image with 'docker build -t myapp .', 2) Push to registry with 'docker push registry.company.com/myapp', 3) Deploy with 'kubectl apply -f deployment.yaml'."}
